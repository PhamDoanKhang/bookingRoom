/*! For license information please see 446.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[446],{4617:(t,r,e)=>{e.d(r,{ZP:()=>u,Hv:()=>s,A:()=>l});var n=e(1022),o=e.n(n),i=e(8495),a=e.n(i);e(771);var c=new(a().Agent)({rejectUnauthorized:!1});const u=o().create({baseURL:"http://localhost:5000"},{httpsAgent:c});var s={getListRoom:"/api/room/list",getRoomId:function(t){return"/api/room/get-room-id?id=".concat(t)},postListRoom:"/api/room/post-list-room",deleteRoom:function(t){return"/api/room/delete-room?id=".concat(t)},putRoom:"/api/room//put-room-id"},l={headers:{"Content-Type":"application/json"},headers_token:{Authorization:"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjYyLCJleHAiOjE2ODI2ODI5NTh9.ydqEnnhaG7KbxDQr3aT9cYEiMsPvuZPgGigG_SAIkuU","Content-Type":"application/json"}}},7423:(t,r,e)=>{e.d(r,{Z:()=>i});var n=e(8416),o=e.n(n);e(1022),e(7760),e(4617);const i=function(){return o().createElement(o().Fragment,null,o().createElement("button",{onClick:function(){}},"OnClick"))}},37:(t,r,e)=>{e.d(r,{Z:()=>c});var n=e(8416),o=e.n(n),i=e(7760),a=e(7347);const c=function(){var t=(0,i.useDispatch)();return o().createElement("div",{className:"RoomManager"},o().createElement("button",{onClick:function(){t({type:a.KK.type,data:{location:"Bao Tuoi Tre 3",name:"A3123",option:[],id:3}})}},"Call Api"))}},7347:(t,r,e)=>{e.d(r,{GX:()=>l,KK:()=>f,LF:()=>u,ZP:()=>h,bk:()=>s,ey:()=>c,fN:()=>i,zs:()=>a});var n=(0,e(3748).createSlice)({name:"room",initialState:{listRoom:[],idRoom:{}},reducers:{getListRoom:function(){},setListRoom:function(t,r){t.listRoom=r.payload},getRoomId:function(){},setRoomId:function(t,r){t.idRoom=r.payload},postRoom:function(){},deleteRoom:function(){},putRoom:function(){}}}),o=n.actions,i=o.getListRoom,a=o.setListRoom,c=o.getRoomId,u=o.setRoomId,s=o.postRoom,l=o.deleteRoom,f=o.putRoom;const h=n.reducer},2510:(t,r,e)=>{e.d(r,{Z:()=>$});var n=e(3748),o=e(7858),i=e.n(o),a=e(4857),c=(0,n.createSlice)({name:"Loading",initialState:{toggleLoading:!1},reducers:{getLoading:function(){},setLoading:function(t,r){t.toggleLoading=r.payload}}}),u=c.actions,s=u.getLoading,l=u.setLoading;const f=c.reducer;function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function p(){p=function(){return t};var t={},r=Object.prototype,e=r.hasOwnProperty,n=Object.defineProperty||function(t,r,e){t[r]=e.value},o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function u(t,r,e){return Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[r]}try{u({},"")}catch(t){u=function(t,r,e){return t[r]=e}}function s(t,r,e,o){var i=r&&r.prototype instanceof d?r:d,a=Object.create(i.prototype),c=new _(o||[]);return n(a,"_invoke",{value:A(t,e,c)}),a}function l(t,r,e){try{return{type:"normal",arg:t.call(r,e)}}catch(t){return{type:"throw",arg:t}}}t.wrap=s;var f={};function d(){}function y(){}function v(){}var g={};u(g,i,(function(){return this}));var m=Object.getPrototypeOf,w=m&&m(m(j([])));w&&w!==r&&e.call(w,i)&&(g=w);var b=v.prototype=d.prototype=Object.create(g);function x(t){["next","throw","return"].forEach((function(r){u(t,r,(function(t){return this._invoke(r,t)}))}))}function L(t,r){function o(n,i,a,c){var u=l(t[n],t,i);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"==h(f)&&e.call(f,"__await")?r.resolve(f.__await).then((function(t){o("next",t,a,c)}),(function(t){o("throw",t,a,c)})):r.resolve(f).then((function(t){s.value=t,a(s)}),(function(t){return o("throw",t,a,c)}))}c(u.arg)}var i;n(this,"_invoke",{value:function(t,e){function n(){return new r((function(r,n){o(t,e,r,n)}))}return i=i?i.then(n,n):n()}})}function A(t,r,e){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return{value:void 0,done:!0}}for(e.method=o,e.arg=i;;){var a=e.delegate;if(a){var c=E(a,e);if(c){if(c===f)continue;return c}}if("next"===e.method)e.sent=e._sent=e.arg;else if("throw"===e.method){if("suspendedStart"===n)throw n="completed",e.arg;e.dispatchException(e.arg)}else"return"===e.method&&e.abrupt("return",e.arg);n="executing";var u=l(t,r,e);if("normal"===u.type){if(n=e.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:e.done}}"throw"===u.type&&(n="completed",e.method="throw",e.arg=u.arg)}}}function E(t,r){var e=r.method,n=t.iterator[e];if(void 0===n)return r.delegate=null,"throw"===e&&t.iterator.return&&(r.method="return",r.arg=void 0,E(t,r),"throw"===r.method)||"return"!==e&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+e+"' method")),f;var o=l(n,t.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,f;var i=o.arg;return i?i.done?(r[t.resultName]=i.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,f):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,f)}function k(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function S(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function _(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(k,this),this.reset(!0)}function j(t){if(t){var r=t[i];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,o=function r(){for(;++n<t.length;)if(e.call(t,n))return r.value=t[n],r.done=!1,r;return r.value=void 0,r.done=!0,r};return o.next=o}}return{next:I}}function I(){return{value:void 0,done:!0}}return y.prototype=v,n(b,"constructor",{value:v,configurable:!0}),n(v,"constructor",{value:y,configurable:!0}),y.displayName=u(v,c,"GeneratorFunction"),t.isGeneratorFunction=function(t){var r="function"==typeof t&&t.constructor;return!!r&&(r===y||"GeneratorFunction"===(r.displayName||r.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,v):(t.__proto__=v,u(t,c,"GeneratorFunction")),t.prototype=Object.create(b),t},t.awrap=function(t){return{__await:t}},x(L.prototype),u(L.prototype,a,(function(){return this})),t.AsyncIterator=L,t.async=function(r,e,n,o,i){void 0===i&&(i=Promise);var a=new L(s(r,e,n,o),i);return t.isGeneratorFunction(e)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},x(b),u(b,c,"Generator"),u(b,i,(function(){return this})),u(b,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var r=Object(t),e=[];for(var n in r)e.push(n);return e.reverse(),function t(){for(;e.length;){var n=e.pop();if(n in r)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=j,_.prototype={constructor:_,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!t)for(var r in this)"t"===r.charAt(0)&&e.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function n(e,n){return a.type="throw",a.arg=t,r.next=e,n&&(r.method="next",r.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var c=e.call(i,"catchLoc"),u=e.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(t,r){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&e.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=r&&r<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=r,i?(this.method="next",this.next=i.finallyLoc,f):this.complete(a)},complete:function(t,r){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&r&&(this.next=r),f},finish:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),S(e),f}},catch:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.tryLoc===t){var n=e.completion;if("throw"===n.type){var o=n.arg;S(e)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,r,e){return this.delegate={iterator:j(t),resultName:r,nextLoc:e},"next"===this.method&&(this.arg=void 0),f}},t}var d=p().mark(v),y=p().mark(g);function v(){return p().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,a.gz)(l(!0));case 2:case"end":return t.stop()}}),d)}function g(){return p().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,a.Fm)(s.type,v);case 2:case"end":return t.stop()}}),y)}var m=[(0,a.rM)(g)],w=e(7347),b=e(4617),x=e(5108);function L(){try{return b.ZP.get(b.Hv.getListRoom).then((function(t){return t.data})).catch((function(t){x.log(t)}))}catch(t){x.log(t)}}function A(t){try{return b.ZP.get(b.Hv.getRoomId(t),{headers:b.A.headers_token}).then((function(t){return t.data})).catch((function(t){x.log(t)}))}catch(t){x.log(t)}}function E(t){try{return b.ZP.post(b.Hv.postListRoom,{data:t},{headers:b.A.headers_token}).then((function(t){return t.data})).catch((function(t){x.log(t)}))}catch(t){x.log(t)}}function k(t){try{return b.ZP.delete(b.Hv.deleteRoom(t),{headers:b.A.headers_token}).then((function(t){return t.data})).catch((function(t){x.log(t)}))}catch(t){x.log(t)}}function S(t){try{return x.log(t),b.ZP.put(b.Hv.putRoom,{data:t}).then((function(t){x.log(t.data)})).catch((function(t){x.log(t)}))}catch(t){x.log(t)}}e(9326),e(5202);var _=e(5108);function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function I(){I=function(){return t};var t={},r=Object.prototype,e=r.hasOwnProperty,n=Object.defineProperty||function(t,r,e){t[r]=e.value},o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function u(t,r,e){return Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[r]}try{u({},"")}catch(t){u=function(t,r,e){return t[r]=e}}function s(t,r,e,o){var i=r&&r.prototype instanceof h?r:h,a=Object.create(i.prototype),c=new k(o||[]);return n(a,"_invoke",{value:x(t,e,c)}),a}function l(t,r,e){try{return{type:"normal",arg:t.call(r,e)}}catch(t){return{type:"throw",arg:t}}}t.wrap=s;var f={};function h(){}function p(){}function d(){}var y={};u(y,i,(function(){return this}));var v=Object.getPrototypeOf,g=v&&v(v(S([])));g&&g!==r&&e.call(g,i)&&(y=g);var m=d.prototype=h.prototype=Object.create(y);function w(t){["next","throw","return"].forEach((function(r){u(t,r,(function(t){return this._invoke(r,t)}))}))}function b(t,r){function o(n,i,a,c){var u=l(t[n],t,i);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"==j(f)&&e.call(f,"__await")?r.resolve(f.__await).then((function(t){o("next",t,a,c)}),(function(t){o("throw",t,a,c)})):r.resolve(f).then((function(t){s.value=t,a(s)}),(function(t){return o("throw",t,a,c)}))}c(u.arg)}var i;n(this,"_invoke",{value:function(t,e){function n(){return new r((function(r,n){o(t,e,r,n)}))}return i=i?i.then(n,n):n()}})}function x(t,r,e){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return{value:void 0,done:!0}}for(e.method=o,e.arg=i;;){var a=e.delegate;if(a){var c=L(a,e);if(c){if(c===f)continue;return c}}if("next"===e.method)e.sent=e._sent=e.arg;else if("throw"===e.method){if("suspendedStart"===n)throw n="completed",e.arg;e.dispatchException(e.arg)}else"return"===e.method&&e.abrupt("return",e.arg);n="executing";var u=l(t,r,e);if("normal"===u.type){if(n=e.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:e.done}}"throw"===u.type&&(n="completed",e.method="throw",e.arg=u.arg)}}}function L(t,r){var e=r.method,n=t.iterator[e];if(void 0===n)return r.delegate=null,"throw"===e&&t.iterator.return&&(r.method="return",r.arg=void 0,L(t,r),"throw"===r.method)||"return"!==e&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+e+"' method")),f;var o=l(n,t.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,f;var i=o.arg;return i?i.done?(r[t.resultName]=i.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,f):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,f)}function A(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function E(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function k(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(A,this),this.reset(!0)}function S(t){if(t){var r=t[i];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,o=function r(){for(;++n<t.length;)if(e.call(t,n))return r.value=t[n],r.done=!1,r;return r.value=void 0,r.done=!0,r};return o.next=o}}return{next:_}}function _(){return{value:void 0,done:!0}}return p.prototype=d,n(m,"constructor",{value:d,configurable:!0}),n(d,"constructor",{value:p,configurable:!0}),p.displayName=u(d,c,"GeneratorFunction"),t.isGeneratorFunction=function(t){var r="function"==typeof t&&t.constructor;return!!r&&(r===p||"GeneratorFunction"===(r.displayName||r.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,d):(t.__proto__=d,u(t,c,"GeneratorFunction")),t.prototype=Object.create(m),t},t.awrap=function(t){return{__await:t}},w(b.prototype),u(b.prototype,a,(function(){return this})),t.AsyncIterator=b,t.async=function(r,e,n,o,i){void 0===i&&(i=Promise);var a=new b(s(r,e,n,o),i);return t.isGeneratorFunction(e)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},w(m),u(m,c,"Generator"),u(m,i,(function(){return this})),u(m,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var r=Object(t),e=[];for(var n in r)e.push(n);return e.reverse(),function t(){for(;e.length;){var n=e.pop();if(n in r)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=S,k.prototype={constructor:k,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var r in this)"t"===r.charAt(0)&&e.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function n(e,n){return a.type="throw",a.arg=t,r.next=e,n&&(r.method="next",r.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var c=e.call(i,"catchLoc"),u=e.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(t,r){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&e.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=r&&r<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=r,i?(this.method="next",this.next=i.finallyLoc,f):this.complete(a)},complete:function(t,r){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&r&&(this.next=r),f},finish:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),E(e),f}},catch:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.tryLoc===t){var n=e.completion;if("throw"===n.type){var o=n.arg;E(e)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,r,e){return this.delegate={iterator:S(t),resultName:r,nextLoc:e},"next"===this.method&&(this.arg=void 0),f}},t}var O=I().mark(N),R=I().mark(T),C=I().mark(B),P=I().mark(F),Z=I().mark(z),G=I().mark(M);function N(){var t;return I().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,(0,a.RE)(L);case 2:if("200"!==(t=r.sent).code){r.next=8;break}return r.next=6,(0,a.gz)((0,w.zs)(t.data));case 6:r.next=9;break;case 8:_.log("Chua thuc hien");case 9:case"end":return r.stop()}}),O)}function T(t){var r,e;return I().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.data.id,n.next=3,(0,a.RE)(A,r);case 3:if("200"!==(e=n.sent).code){n.next=9;break}return n.next=7,(0,a.gz)((0,w.LF)(e.data));case 7:n.next=10;break;case 9:_.log("Chua thuc hien");case 10:case"end":return n.stop()}}),R)}function B(t){var r;return I().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.RE)(E,t.data);case 2:r=e.sent,_.log(r),r.code;case 5:case"end":return e.stop()}}),C)}function F(t){var r;return I().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.data.id,e.next=3,(0,a.RE)(k,r);case 3:e.sent.code;case 5:case"end":return e.stop()}}),P)}function z(t){var r;return I().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.data,e.next=3,(0,a.RE)(S,r);case 3:e.sent;case 4:case"end":return e.stop()}}),Z)}function M(){return I().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,a.ib)(w.fN.type,N);case 2:return t.next=4,(0,a.ib)(w.ey.type,T);case 4:return t.next=6,(0,a.ib)(w.bk.type,B);case 6:return t.next=8,(0,a.ib)(w.GX.type,F);case 8:return t.next=10,(0,a.ib)(w.KK.type,z);case 10:case"end":return t.stop()}}),G)}var U=[(0,a.rM)(M)];function Y(t){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Y(t)}function J(){J=function(){return t};var t={},r=Object.prototype,e=r.hasOwnProperty,n=Object.defineProperty||function(t,r,e){t[r]=e.value},o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function u(t,r,e){return Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[r]}try{u({},"")}catch(t){u=function(t,r,e){return t[r]=e}}function s(t,r,e,o){var i=r&&r.prototype instanceof h?r:h,a=Object.create(i.prototype),c=new k(o||[]);return n(a,"_invoke",{value:x(t,e,c)}),a}function l(t,r,e){try{return{type:"normal",arg:t.call(r,e)}}catch(t){return{type:"throw",arg:t}}}t.wrap=s;var f={};function h(){}function p(){}function d(){}var y={};u(y,i,(function(){return this}));var v=Object.getPrototypeOf,g=v&&v(v(S([])));g&&g!==r&&e.call(g,i)&&(y=g);var m=d.prototype=h.prototype=Object.create(y);function w(t){["next","throw","return"].forEach((function(r){u(t,r,(function(t){return this._invoke(r,t)}))}))}function b(t,r){function o(n,i,a,c){var u=l(t[n],t,i);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"==Y(f)&&e.call(f,"__await")?r.resolve(f.__await).then((function(t){o("next",t,a,c)}),(function(t){o("throw",t,a,c)})):r.resolve(f).then((function(t){s.value=t,a(s)}),(function(t){return o("throw",t,a,c)}))}c(u.arg)}var i;n(this,"_invoke",{value:function(t,e){function n(){return new r((function(r,n){o(t,e,r,n)}))}return i=i?i.then(n,n):n()}})}function x(t,r,e){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return{value:void 0,done:!0}}for(e.method=o,e.arg=i;;){var a=e.delegate;if(a){var c=L(a,e);if(c){if(c===f)continue;return c}}if("next"===e.method)e.sent=e._sent=e.arg;else if("throw"===e.method){if("suspendedStart"===n)throw n="completed",e.arg;e.dispatchException(e.arg)}else"return"===e.method&&e.abrupt("return",e.arg);n="executing";var u=l(t,r,e);if("normal"===u.type){if(n=e.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:e.done}}"throw"===u.type&&(n="completed",e.method="throw",e.arg=u.arg)}}}function L(t,r){var e=r.method,n=t.iterator[e];if(void 0===n)return r.delegate=null,"throw"===e&&t.iterator.return&&(r.method="return",r.arg=void 0,L(t,r),"throw"===r.method)||"return"!==e&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+e+"' method")),f;var o=l(n,t.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,f;var i=o.arg;return i?i.done?(r[t.resultName]=i.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,f):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,f)}function A(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function E(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function k(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(A,this),this.reset(!0)}function S(t){if(t){var r=t[i];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,o=function r(){for(;++n<t.length;)if(e.call(t,n))return r.value=t[n],r.done=!1,r;return r.value=void 0,r.done=!0,r};return o.next=o}}return{next:_}}function _(){return{value:void 0,done:!0}}return p.prototype=d,n(m,"constructor",{value:d,configurable:!0}),n(d,"constructor",{value:p,configurable:!0}),p.displayName=u(d,c,"GeneratorFunction"),t.isGeneratorFunction=function(t){var r="function"==typeof t&&t.constructor;return!!r&&(r===p||"GeneratorFunction"===(r.displayName||r.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,d):(t.__proto__=d,u(t,c,"GeneratorFunction")),t.prototype=Object.create(m),t},t.awrap=function(t){return{__await:t}},w(b.prototype),u(b.prototype,a,(function(){return this})),t.AsyncIterator=b,t.async=function(r,e,n,o,i){void 0===i&&(i=Promise);var a=new b(s(r,e,n,o),i);return t.isGeneratorFunction(e)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},w(m),u(m,c,"Generator"),u(m,i,(function(){return this})),u(m,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var r=Object(t),e=[];for(var n in r)e.push(n);return e.reverse(),function t(){for(;e.length;){var n=e.pop();if(n in r)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=S,k.prototype={constructor:k,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var r in this)"t"===r.charAt(0)&&e.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function n(e,n){return a.type="throw",a.arg=t,r.next=e,n&&(r.method="next",r.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var c=e.call(i,"catchLoc"),u=e.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(t,r){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&e.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=r&&r<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=r,i?(this.method="next",this.next=i.finallyLoc,f):this.complete(a)},complete:function(t,r){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&r&&(this.next=r),f},finish:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),E(e),f}},catch:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.tryLoc===t){var n=e.completion;if("throw"===n.type){var o=n.arg;E(e)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,r,e){return this.delegate={iterator:S(t),resultName:r,nextLoc:e},"next"===this.method&&(this.arg=void 0),f}},t}var K=J().mark(X);function H(t){return function(t){if(Array.isArray(t))return D(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,r){if(t){if("string"==typeof t)return D(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?D(t,r):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function D(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function X(){return J().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,a.$6)([].concat(H(m),H(U)));case 2:case"end":return t.stop()}}),K)}var V=i()(),W=(0,n.configureStore)({reducer:{loading:f,room:w.ZP},middleware:[V]});V.run(X);const $=W},9087:(t,r,e)=>{e.d(r,{Z:()=>c});var n=e(7537),o=e.n(n),i=e(3645),a=e.n(i)()(o());a.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Karla:wght@400;800&family=Montserrat:wght@300;400;700&family=Mulish:wght@200;300;400;500&display=swap);"]),a.push([t.id,'* {\r\n    font-size: 16px;\r\n    font-family: "Mulish", sans-serif !important;\r\n    font-weight: 500;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nh1,h2,h3,h4 {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n',"",{version:3,sources:["webpack://./src/App.css"],names:[],mappings:"AAEA;IACI,eAAe;IACf,4CAA4C;IAC5C,gBAAgB;IAChB,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,UAAU;IACV,SAAS;AACb",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Karla:wght@400;800&family=Montserrat:wght@300;400;700&family=Mulish:wght@200;300;400;500&display=swap");\r\n\r\n* {\r\n    font-size: 16px;\r\n    font-family: "Mulish", sans-serif !important;\r\n    font-weight: 500;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nh1,h2,h3,h4 {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n'],sourceRoot:""}]);const c=a},2924:(t,r,e)=>{e.d(r,{Z:()=>c});var n=e(7537),o=e.n(n),i=e(3645),a=e.n(i)()(o());a.push([t.id,".s_a4Dd7Ji7x5Zj_ytkZB{\r\n    background: rgb(3, 97, 0);\r\n    height: 100%;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/Sidebar/Sidebar.module.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,YAAY;AAChB",sourcesContent:[".Sider{\r\n    background: rgb(3, 97, 0);\r\n    height: 100%;\r\n}\r\n"],sourceRoot:""}]),a.locals={Sider:"s_a4Dd7Ji7x5Zj_ytkZB"};const c=a},1455:(t,r,e)=>{e.d(r,{Z:()=>c});var n=e(7537),o=e.n(n),i=e(3645),a=e.n(i)()(o());a.push([t.id,".ivubIaL7XyUBWFBznJw2{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    min-height: 100vh;\r\n}","",{version:3,sources:["webpack://./src/styles/globalStyles.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,iBAAiB;AACrB",sourcesContent:[".container{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    min-height: 100vh;\r\n}"],sourceRoot:""}]),a.locals={container:"ivubIaL7XyUBWFBznJw2"};const c=a},5722:(t,r,e)=>{var n=e(3379),o=e.n(n),i=e(7795),a=e.n(i),c=e(569),u=e.n(c),s=e(3565),l=e.n(s),f=e(9216),h=e.n(f),p=e(4589),d=e.n(p),y=e(9087),v={};v.styleTagTransform=d(),v.setAttributes=l(),v.insert=u().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=h(),o()(y.Z,v),y.Z&&y.Z.locals&&y.Z.locals},1645:(t,r,e)=>{e.d(r,{Z:()=>g});var n=e(3379),o=e.n(n),i=e(7795),a=e.n(i),c=e(569),u=e.n(c),s=e(3565),l=e.n(s),f=e(9216),h=e.n(f),p=e(4589),d=e.n(p),y=e(2924),v={};v.styleTagTransform=d(),v.setAttributes=l(),v.insert=u().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=h(),o()(y.Z,v);const g=y.Z&&y.Z.locals?y.Z.locals:void 0},7018:(t,r,e)=>{e.d(r,{Z:()=>g});var n=e(3379),o=e.n(n),i=e(7795),a=e.n(i),c=e(569),u=e.n(c),s=e(3565),l=e.n(s),f=e(9216),h=e.n(f),p=e(4589),d=e.n(p),y=e(1455),v={};v.styleTagTransform=d(),v.setAttributes=l(),v.insert=u().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=h(),o()(y.Z,v);const g=y.Z&&y.Z.locals?y.Z.locals:void 0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLEVBRWZBLEVBQVFDLGtCQUFvQixJQUM1QkQsRUFBUUUsY0FBZ0IsSUFFbEJGLEVBQVFHLE9BQVMsU0FBYyxLQUFNLFFBRTNDSCxFQUFRSSxPQUFTLElBQ2pCSixFQUFRSyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTTCxHQUtuQixRQUFlLEtBQVcsV0FBaUIsZ0JBQWlCMUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9zcmMvdXRpbHMvVG9rZW4vaW5kZXguanMiLCJ3ZWJwYWNrOi8vY2xpZW50Ly4vc3JjL0FQSS5qcyIsIndlYnBhY2s6Ly9jbGllbnQvLi9zcmMvY29tcG9uZW50cy9UZXN0L2luZGV4LmpzIiwid2VicGFjazovL2NsaWVudC8uL3NyYy9wYWdlL3Jvb21fbWFuYWdlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9jbGllbnQvLi9zcmMvc3RvcmUvcmVkdXgvc2xpY2VzL3Jvb21TbGljZS5qcyIsIndlYnBhY2s6Ly9jbGllbnQvLi9zcmMvc3RvcmUvcmVkdXgvc2xpY2VzL0xvYWRpbmdTbGljZS5qcyIsIndlYnBhY2s6Ly9jbGllbnQvLi9zcmMvc3RvcmUvcmVkdXgvc2FnYS93YXRjaGVycy9Mb2FkaW5nU2FnYS5qcyIsIndlYnBhY2s6Ly9jbGllbnQvLi9zcmMvYXBpL3Jvb21BUEkuanMiLCJ3ZWJwYWNrOi8vY2xpZW50Ly4vc3JjL3N0b3JlL3JlZHV4L3NhZ2Evd2F0Y2hlcnMvUm9vbVNhZ2EuanMiLCJ3ZWJwYWNrOi8vY2xpZW50Ly4vc3JjL3N0b3JlL3JlZHV4L3NhZ2Evcm9vdFNhZ2EuanMiLCJ3ZWJwYWNrOi8vY2xpZW50Ly4vc3JjL3N0b3JlL3N0b3JlLmpzIiwid2VicGFjazovL2NsaWVudC8uL3NyYy9BcHAuY3NzIiwid2VicGFjazovL2NsaWVudC8uL3NyYy9jb21wb25lbnRzL1NpZGViYXIvU2lkZWJhci5tb2R1bGUuY3NzIiwid2VicGFjazovL2NsaWVudC8uL3NyYy9zdHlsZXMvZ2xvYmFsU3R5bGVzLm1vZHVsZS5jc3MiLCJ3ZWJwYWNrOi8vY2xpZW50Ly4vc3JjL0FwcC5jc3M/ZDljZCIsIndlYnBhY2s6Ly9jbGllbnQvLi9zcmMvY29tcG9uZW50cy9TaWRlYmFyL1NpZGViYXIubW9kdWxlLmNzcz84NTRlIiwid2VicGFjazovL2NsaWVudC8uL3NyYy9zdHlsZXMvZ2xvYmFsU3R5bGVzLm1vZHVsZS5jc3M/NjQ4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VKd3QgfSBmcm9tIFwicmVhY3Qtand0XCJcclxuXHJcbi8vIEdFVCBUT0tFTlxyXG5leHBvcnQgY29uc3QgZ2V0VG9rZW4gPSAoa2V5ID0gXCJ1c2VydG9rZW5cIik9PntcclxuICAgIGlmKGRvY3VtZW50LmNvb2tpZS5sZW5ndGggPiAwKXtcclxuICAgICAgICBjb25zdCBjb29raWVzID0gZG9jdW1lbnQuY29va2llLnNwbGl0KFwiOyBcIik7XHJcbiAgICAgICAgbGV0IHRva2VuO1xyXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgY29va2llcykge1xyXG4gICAgICAgICAgICBpZih2YWx1ZS5zcGxpdChcIj1cIilbMF0gPT09IGtleSl7XHJcbiAgICAgICAgICAgICAgICB0b2tlbiA9IHZhbHVlLnNwbGl0KFwiPVwiKVsxXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0b2tlblxyXG4gICAgfSAgICBcclxufVxyXG5cclxuLy8gREVDT0RFIFRPS0VOXHJcbmV4cG9ydCBjb25zdCBwYXJzZVRva2VuID0gKHRva2VuKT0+e1xyXG4gICAgaWYodG9rZW4pe1xyXG4gICAgICAgIGNvbnN0IHsgZGVjb2RlZFRva2VuLCBpc0V4cGlyZWQgfSA9IHVzZUp3dCh0b2tlbikgXHJcbiAgICAgICAgcmV0dXJuIGRlY29kZWRUb2tlblxyXG4gICAgfVxyXG59XHJcblxyXG4iLCJpbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XHJcbmltcG9ydCBodHRwcyBmcm9tIFwiaHR0cHNcIlxyXG5pbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gXCIuL3V0aWxzL1Rva2VuXCI7XHJcblxyXG5cclxuXHJcbmNvbnN0IGFnZW50ID0gbmV3IGh0dHBzLkFnZW50KHtcclxuICAgIHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2VcclxufSlcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGF4aW9zLmNyZWF0ZSh7XHJcbiAgICBiYXNlVVJMOiBwcm9jZXNzLmVudi5IRF9FWFBfRE9NQUlOLCAgXHJcbn0se2h0dHBzQWdlbnQ6IGFnZW50fSlcclxuXHJcbmV4cG9ydCBsZXQgZW5kcG9pbnRzID0ge1xyXG4gICAgLy8gUm9vbSBtYW5hZ2VyIFxyXG4gICAgXCJnZXRMaXN0Um9vbVwiIDogXCIvYXBpL3Jvb20vbGlzdFwiLFxyXG4gICAgXCJnZXRSb29tSWRcIjogKGlkKT0+IGAvYXBpL3Jvb20vZ2V0LXJvb20taWQ/aWQ9JHtpZH1gLFxyXG4gICAgXCJwb3N0TGlzdFJvb21cIjogXCIvYXBpL3Jvb20vcG9zdC1saXN0LXJvb21cIixcclxuICAgIFwiZGVsZXRlUm9vbVwiOiAoaWQpPT5gL2FwaS9yb29tL2RlbGV0ZS1yb29tP2lkPSR7aWR9YCxcclxuICAgIFwicHV0Um9vbVwiOiBgL2FwaS9yb29tLy9wdXQtcm9vbS1pZGAsXHJcbn1cclxuXHJcbmV4cG9ydCBsZXQgaGVhZGVycyA9IHtcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgIH0sXHJcbiAgICBoZWFkZXJzX3Rva2VuOiB7XHJcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciBleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcFpDSTZNall5TENKbGVIQWlPakUyT0RJMk9ESTVOVGg5LnlkcUVubmhhRzdLYnhEUXIzYVQ5Y1lFaU1zUHZ1WlBnR2lnR19TQUlrdVVgLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgfVxyXG59XHJcblxyXG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB1c2VGZXRjaExpc3QgZnJvbSBcIi4uLy4uL2hvb2svdXNlRmV0Y2hMaXN0XCI7XHJcblxyXG5pbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiXHJcblxyXG5pbXBvcnQgQVBJICx7IGVuZHBvaW50cyAsIGhlYWRlcnMgIH0gZnJvbSBcIi4uLy4uL0FQSVwiXHJcblxyXG5mdW5jdGlvbiBUZXN0KCkge1xyXG5cclxuICAgIGNvbnN0IEhhbmRlbENsaWNrID0gKCk9PntcclxuXHJcbiAgICB9XHJcbiAgICByZXR1cm4gKCBcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e0hhbmRlbENsaWNrfT5PbkNsaWNrPC9idXR0b24+XHJcbiAgICAgICAgPC8+XHJcbiAgICAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGVzdDsiLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcblxyXG5pbXBvcnQgeyB1c2VEaXNwYXRjaCx1c2VTZWxlY3RvciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgeyBsb2FkaW5nU2VsZWN0ZXIgfSBmcm9tIFwiLi4vLi4vc3RvcmUvcmVkdXgvc2VsZWN0ZXJzXCJcclxuaW1wb3J0IHsgZ2V0Um9vbUlkLHBvc3RSb29tLGRlbGV0ZVJvb20gLCBwdXRSb29tIH0gZnJvbSBcIi4uLy4uL3N0b3JlL3JlZHV4L3NsaWNlcy9yb29tU2xpY2VcIjtcclxuXHJcbmZ1bmN0aW9uIFJvb21NYW5hZ2VyKCkge1xyXG4gICAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG5cclxuXHJcbiAgICBjb25zdCBIYW5kZWxDTGljayA9ICgpPT57XHJcbiAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiBwdXRSb29tLnR5cGUsIGRhdGE6IHsgbG9jYXRpb246XCJCYW8gVHVvaSBUcmUgM1wiICwgbmFtZTogXCJBMzEyM1wiLCBvcHRpb246W10gLCBpZDogM319KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKCBcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlJvb21NYW5hZ2VyXCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCk9PkhhbmRlbENMaWNrKCl9PkNhbGwgQXBpPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUm9vbU1hbmFnZXI7IiwiaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiXHJcblxyXG5jb25zdCByb29tU2xpY2UgPSBjcmVhdGVTbGljZSh7XHJcbiAgICBuYW1lOiBcInJvb21cIixcclxuICAgIGluaXRpYWxTdGF0ZToge1xyXG4gICAgICAgIGxpc3RSb29tOiBbXSxcclxuICAgICAgICBpZFJvb206IHt9XHJcbiAgICB9LFxyXG4gICAgcmVkdWNlcnM6IHtcclxuICAgICAgICAvLyBnZXQgbGlzdCByb29tIFxyXG4gICAgICAgIGdldExpc3RSb29tOiAoKT0+e30sXHJcbiAgICAgICAgc2V0TGlzdFJvb206IChzdGF0ZSxhY3Rpb24pPT57XHJcbiAgICAgICAgICAgIHN0YXRlLmxpc3RSb29tID0gYWN0aW9uLnBheWxvYWRcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIGdldCByb29tIGlkXHJcbiAgICAgICAgZ2V0Um9vbUlkOiAoKT0+e30sXHJcbiAgICAgICAgc2V0Um9vbUlkOiAoc3RhdGUsYWN0aW9uKT0+e1xyXG4gICAgICAgICAgICBzdGF0ZS5pZFJvb20gPSBhY3Rpb24ucGF5bG9hZDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIHBvc3Qgcm9vbVxyXG4gICAgICAgIHBvc3RSb29tOiAoKT0+e30sXHJcbiAgICAgICAgLy9kZWxldGUgcm9vbVxyXG4gICAgICAgIGRlbGV0ZVJvb206KCk9Pnt9LFxyXG4gICAgICAgIC8vIHB1dCByb29tIFxyXG4gICAgICAgIHB1dFJvb206ICgpPT57fVxyXG4gICAgfVxyXG59KVxyXG5cclxuZXhwb3J0IGNvbnN0IHsgZ2V0TGlzdFJvb20sIHNldExpc3RSb29tICwgZ2V0Um9vbUlkICwgc2V0Um9vbUlkICwgcG9zdFJvb20sIGRlbGV0ZVJvb20gLCBwdXRSb29tfSA9IHJvb21TbGljZS5hY3Rpb25zXHJcbmV4cG9ydCBkZWZhdWx0IHJvb21TbGljZS5yZWR1Y2VyIiwiaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiXHJcblxyXG5jb25zdCBMb2FkaW5nU2xpY2UgPSBjcmVhdGVTbGljZSh7XHJcbiAgICBuYW1lOiBcIkxvYWRpbmdcIixcclxuICAgIGluaXRpYWxTdGF0ZToge1xyXG4gICAgICAgIHRvZ2dsZUxvYWRpbmc6IGZhbHNlLFxyXG4gICAgfSxcclxuICAgIHJlZHVjZXJzOiB7XHJcbiAgICAgICAgZ2V0TG9hZGluZzogKCk9Pnt9LFxyXG4gICAgICAgIHNldExvYWRpbmc6IChzdGF0ZSxhY3Rpb24pPT57XHJcbiAgICAgICAgICAgIHN0YXRlLnRvZ2dsZUxvYWRpbmcgPSBhY3Rpb24ucGF5bG9hZFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSlcclxuXHJcbmV4cG9ydCBjb25zdCB7IGdldExvYWRpbmcgLCBzZXRMb2FkaW5nIH0gPSBMb2FkaW5nU2xpY2UuYWN0aW9uc1xyXG5leHBvcnQgZGVmYXVsdCBMb2FkaW5nU2xpY2UucmVkdWNlciIsImltcG9ydCB7IGNhbGwsIGZvcmssIHB1dCwgdGFrZUxhdGVzdCB9IGZyb20gXCJyZWR1eC1zYWdhL2VmZmVjdHNcIlxyXG5pbXBvcnQgeyBnZXRMb2FkaW5nLHNldExvYWRpbmcgfSBmcm9tIFwiLi4vLi4vc2xpY2VzL0xvYWRpbmdTbGljZVwiO1xyXG5cclxuZnVuY3Rpb24qIG9uSGFuZGVsTG9hZGluZygpe1xyXG4gICAgeWllbGQgcHV0KHNldExvYWRpbmcodHJ1ZSkpXHJcbn1cclxuXHJcbmZ1bmN0aW9uKiBhbGxIYW5kZWxMb2FkaW5nKCl7XHJcbiAgICB5aWVsZCB0YWtlTGF0ZXN0KGdldExvYWRpbmcudHlwZSxvbkhhbmRlbExvYWRpbmcpXHJcbn1cclxuXHJcblxyXG5leHBvcnQgY29uc3QgTG9hZGluZ1NhZ2EgPSBbZm9yayhhbGxIYW5kZWxMb2FkaW5nKV0iLCJpbXBvcnQgQVBJLCB7ZW5kcG9pbnRzICwgaGVhZGVyc30gZnJvbSBcIi4uL0FQSVwiXHJcblxyXG4vLyBHZXQgbGlzdCBhcGlcclxuZXhwb3J0IGZ1bmN0aW9uIGdldExpc3RSb29tQXBpKCl7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBBUEkuZ2V0KGVuZHBvaW50c1tcImdldExpc3RSb29tXCJdLClcclxuICAgICAgICAgICAgICAgIC50aGVuKChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5kYXRhO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIEdldCByb29tIGlkXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSb29tSWRBcGkoaWQpe1xyXG4gICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gQVBJLmdldChlbmRwb2ludHNbXCJnZXRSb29tSWRcIl0oaWQpLHtoZWFkZXJzOiBoZWFkZXJzLmhlYWRlcnNfdG9rZW59KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmRhdGE7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgIH1cclxufVxyXG5cclxuLy8gUG9zdCByb29tXHJcbmV4cG9ydCBmdW5jdGlvbiBwb3N0Um9vbUFQSShkYXRhKXtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIEFQSS5wb3N0KGVuZHBvaW50c1tcInBvc3RMaXN0Um9vbVwiXSwgeyBkYXRhOiBkYXRhIH0gLCB7IGhlYWRlcnM6IGhlYWRlcnMuaGVhZGVyc190b2tlbiB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuZGF0YVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLy8gRGVsZXRlIHJvb20gXHJcbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVSb29tQVBJKGlkKXtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIEFQSS5kZWxldGUoZW5kcG9pbnRzW1wiZGVsZXRlUm9vbVwiXShpZCkse2hlYWRlcnM6IGhlYWRlcnMuaGVhZGVyc190b2tlbn0pXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5kYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBQdXQgcm9vbSBcclxuZXhwb3J0IGZ1bmN0aW9uIHB1dFJvb21BUEkoZGF0YSl7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgIHJldHVybiBBUEkucHV0KGVuZHBvaW50c1tcInB1dFJvb21cIl0se2RhdGE6IGRhdGF9KVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IHRha2VFdmVyeSwgY2FsbCAsIHB1dCwgZm9yaywgZGVsYXkgfSBmcm9tIFwicmVkdXgtc2FnYS9lZmZlY3RzXCI7XHJcbmltcG9ydCB7IGdldExpc3RSb29tICwgc2V0TGlzdFJvb20gLCBnZXRSb29tSWQgLCBzZXRSb29tSWQsIHBvc3RSb29tICwgZGVsZXRlUm9vbSAsIHB1dFJvb20gfSBmcm9tIFwiLi4vLi4vc2xpY2VzL3Jvb21TbGljZVwiO1xyXG5pbXBvcnQgeyBnZXRMaXN0Um9vbUFwaSxnZXRSb29tSWRBcGkscG9zdFJvb21BUEksZGVsZXRlUm9vbUFQSSxwdXRSb29tQVBJIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2FwaS9yb29tQVBJXCI7XHJcbmltcG9ydCB7IHNldExvYWRpbmcgfSBmcm9tIFwiLi4vLi4vc2xpY2VzL0xvYWRpbmdTbGljZVwiO1xyXG5pbXBvcnQgeyBTdWNjZXNzTm90aWZpY2F0aW9uLCBJbmZvTm90aWZpY2F0aW9uICwgRXJyb3JOb3RpZmljYXRpb24gLCBXYXJuTm90aWZpY2F0aW9uIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL05vdGlmaWNhdGlvblwiXHJcblxyXG4vLyBHZXQgbGlzdCByb29tXHJcbmZ1bmN0aW9uKiBvbkhhbmRlbEdldExpc3RSb29tKCl7XHJcbiAgICBjb25zdCByZXN1bHQgPSB5aWVsZCBjYWxsKGdldExpc3RSb29tQXBpKTtcclxuICAgIGlmKHJlc3VsdC5jb2RlID09PSBcIjIwMFwiKXtcclxuICAgICAgICB5aWVsZCBwdXQoc2V0TGlzdFJvb20ocmVzdWx0LmRhdGEpKTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIC8vIENodWEgbGF5IGR1b2MgZHUgbGlldSB0aGkgY2hheSBsYWkgY2FpIGhhbSBuYXlcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkNodWEgdGh1YyBoaWVuXCIpO1xyXG4gICAgfVxyXG59ICAgICAgIFxyXG5cclxuLy8gR2V0IHJvb20gaWRcclxuZnVuY3Rpb24qIG9uSGFuZGVsR2V0Um9vbUlkKHBheWxvYWQpe1xyXG4gICAgY29uc3QgeyBpZCB9ID0gcGF5bG9hZC5kYXRhO1xyXG4gICAgY29uc3QgcmVzdWx0ID0geWllbGQgY2FsbChnZXRSb29tSWRBcGksaWQpO1xyXG4gICAgaWYocmVzdWx0LmNvZGUgPT09IFwiMjAwXCIpe1xyXG4gICAgICAgIHlpZWxkIHB1dChzZXRSb29tSWQocmVzdWx0LmRhdGEpKTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIC8vIENodWEgbGF5IGR1b2MgZHUgbGlldSBjaGF5IGhhbSBuYXlcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkNodWEgdGh1YyBoaWVuXCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBQb3N0IHJvb21cclxuZnVuY3Rpb24qIG9uSGFuZGVsUG9zdFJvb20ocGF5bG9hZCl7XHJcbiAgICBjb25zdCByZXN1ZnQgPSB5aWVsZCBjYWxsKHBvc3RSb29tQVBJLHBheWxvYWQuZGF0YSk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXN1ZnQpO1xyXG4gICAgaWYocmVzdWZ0LmNvZGUgPT09IFwiMjAwXCIpe1xyXG4gICAgICAgIC8vIFRo4buxYyBoaeG7h24gZ8OsIMSRw7Mga2hpIHThuqFvIHRow6BuaCBjw7RuZ1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgLy8gVGjhu7FjIGhp4buHbiBnw6wgxJHDsyBraGkgdOG6oW8gdGjhuqV0IGLhuqFpXHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIERlbGV0ZSByb29tIGlkXHJcbmZ1bmN0aW9uKiBvbkhhbmRlbERlbGV0ZVJvb20ocGF5bG9hZCl7XHJcbiAgICBjb25zdCB7IGlkIH0gPSBwYXlsb2FkLmRhdGE7XHJcbiAgICBjb25zdCByZXN1bHQgPSB5aWVsZCBjYWxsKGRlbGV0ZVJvb21BUEksaWQpO1xyXG4gICAgaWYocmVzdWx0LmNvZGUgPT09IFwiMjAwXCIpe1xyXG4gICAgICAgIC8vIENoYXkgZG9hbiBjb2RlIHRyb25nIGRheSBcclxuICAgIH1lbHNle1xyXG4gICAgICAgIC8vIHdyaXRlIGNvZGUgaGVyZVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBwdXQgcm9vbSBpZFxyXG5mdW5jdGlvbiogb25IYW5kZWxQdXRSb29tKHBheWxvYWQpe1xyXG4gICAgY29uc3QgeyBkYXRhIH0gPSBwYXlsb2FkO1xyXG4gICAgY29uc3QgcmVzdWx0ID0geWllbGQgY2FsbChwdXRSb29tQVBJLGRhdGEpO1xyXG59XHJcblxyXG5mdW5jdGlvbiogYWxsSGFuZGVsUm9vbVNhZ2EoKXtcclxuICAgIHlpZWxkIHRha2VFdmVyeShnZXRMaXN0Um9vbS50eXBlLG9uSGFuZGVsR2V0TGlzdFJvb20pO1xyXG4gICAgeWllbGQgdGFrZUV2ZXJ5KGdldFJvb21JZC50eXBlLG9uSGFuZGVsR2V0Um9vbUlkKTtcclxuICAgIHlpZWxkIHRha2VFdmVyeShwb3N0Um9vbS50eXBlLG9uSGFuZGVsUG9zdFJvb20pO1xyXG4gICAgeWllbGQgdGFrZUV2ZXJ5KGRlbGV0ZVJvb20udHlwZSwgb25IYW5kZWxEZWxldGVSb29tKTtcclxuICAgIHlpZWxkIHRha2VFdmVyeShwdXRSb29tLnR5cGUsIG9uSGFuZGVsUHV0Um9vbSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByb29tU2FnYSA9IFtmb3JrKGFsbEhhbmRlbFJvb21TYWdhKV07XHJcblxyXG4iLCJpbXBvcnQgeyBhbGwgfSBmcm9tIFwicmVkdXgtc2FnYS9lZmZlY3RzXCJcclxuaW1wb3J0IHsgTG9hZGluZ1NhZ2EgfSBmcm9tIFwiLi93YXRjaGVycy9Mb2FkaW5nU2FnYVwiXHJcbmltcG9ydCB7IHJvb21TYWdhIH0gZnJvbSBcIi4vd2F0Y2hlcnMvUm9vbVNhZ2FcIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24qIHJvb3RTYWdhKCl7XHJcbiAgICB5aWVsZCBhbGwoW1xyXG4gICAgICAgIC4uLkxvYWRpbmdTYWdhLFxyXG4gICAgICAgIC4uLnJvb21TYWdhXHJcbiAgICBdKVxyXG59IiwiaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQgY3JlYXRlU2FnYU1pZGRsZXdhcmUgZnJvbSBcInJlZHV4LXNhZ2FcIjtcclxuXHJcbmltcG9ydCByb290U2FnYSBmcm9tIFwiLi9yZWR1eC9zYWdhL3Jvb3RTYWdhXCI7XHJcbmltcG9ydCBsb2FkaW5nUmVkdWNlciBmcm9tIFwiLi9yZWR1eC9zbGljZXMvTG9hZGluZ1NsaWNlXCI7XHJcbmltcG9ydCByb29tUmVkdWNlciBmcm9tIFwiLi9yZWR1eC9zbGljZXMvcm9vbVNsaWNlXCI7XHJcbi8vIGNyZWF0ZSB0aGUgc2FnYSBtaWRkbGV3YXJlXHJcbmNvbnN0IHNhZ2FNaWRkbGV3YXJlID0gY3JlYXRlU2FnYU1pZGRsZXdhcmUoKVxyXG5cclxuLy8gY29uZmlnIHN0b3JlIHRoZSBzYWdhIG1pZGRsZXdhcmVcclxuY29uc3Qgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgICByZWR1Y2VyOntcclxuICAgICAgICBsb2FkaW5nOiBsb2FkaW5nUmVkdWNlcixcclxuICAgICAgICByb29tOiByb29tUmVkdWNlclxyXG4gICAgfSxcclxuICAgIG1pZGRsZXdhcmU6IFtzYWdhTWlkZGxld2FyZV1cclxufSlcclxuXHJcbi8vIHVzZSB0aGUgc2FnYSBtaWRkZWx3YXJlXHJcbnNhZ2FNaWRkbGV3YXJlLnJ1bihyb290U2FnYSlcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0b3JlXHJcblxyXG5cclxuXHJcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9S2FybGE6d2dodEA0MDA7ODAwJmZhbWlseT1Nb250c2VycmF0OndnaHRAMzAwOzQwMDs3MDAmZmFtaWx5PU11bGlzaDp3Z2h0QDIwMDszMDA7NDAwOzUwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXHJcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcclxcbiAgICBmb250LWZhbWlseTogXFxcIk11bGlzaFxcXCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXHJcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbn1cXHJcXG5cXHJcXG5oMSxoMixoMyxoNCB7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL0FwcC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7SUFDSSxlQUFlO0lBQ2YsNENBQTRDO0lBQzVDLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsU0FBUztJQUNULFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7SUFDVixTQUFTO0FBQ2JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoXFxcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9S2FybGE6d2dodEA0MDA7ODAwJmZhbWlseT1Nb250c2VycmF0OndnaHRAMzAwOzQwMDs3MDAmZmFtaWx5PU11bGlzaDp3Z2h0QDIwMDszMDA7NDAwOzUwMCZkaXNwbGF5PXN3YXBcXFwiKTtcXHJcXG5cXHJcXG4qIHtcXHJcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcclxcbiAgICBmb250LWZhbWlseTogXFxcIk11bGlzaFxcXCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXHJcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbn1cXHJcXG5cXHJcXG5oMSxoMixoMyxoNCB7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnNfYTREZDdKaTd4NVpqX3l0a1pCe1xcclxcbiAgICBiYWNrZ3JvdW5kOiByZ2IoMywgOTcsIDApO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL1NpZGViYXIvU2lkZWJhci5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLlNpZGVye1xcclxcbiAgICBiYWNrZ3JvdW5kOiByZ2IoMywgOTcsIDApO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIlNpZGVyXCI6IFwic19hNERkN0ppN3g1WmpfeXRrWkJcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuaXZ1YklhTDdYeVVCV0ZCem5KdzJ7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvZ2xvYmFsU3R5bGVzLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLGlCQUFpQjtBQUNyQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuY29udGFpbmVye1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJjb250YWluZXJcIjogXCJpdnViSWFMN1h5VUJXRkJ6bkp3MlwiXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vQXBwLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vQXBwLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TaWRlYmFyLm1vZHVsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1NpZGViYXIubW9kdWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9nbG9iYWxTdHlsZXMubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZ2xvYmFsU3R5bGVzLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iXSwibmFtZXMiOlsiYWdlbnQiLCJodHRwcyIsInJlamVjdFVuYXV0aG9yaXplZCIsImF4aW9zIiwiYmFzZVVSTCIsInByb2Nlc3MiLCJodHRwc0FnZW50IiwiZW5kcG9pbnRzIiwiaWQiLCJjb25jYXQiLCJoZWFkZXJzIiwiaGVhZGVyc190b2tlbiIsIkF1dGhvcml6YXRpb24iLCJSZWFjdCIsIm9uQ2xpY2siLCJkaXNwYXRjaCIsInVzZURpc3BhdGNoIiwiY2xhc3NOYW1lIiwidHlwZSIsInB1dFJvb20iLCJkYXRhIiwibG9jYXRpb24iLCJuYW1lIiwib3B0aW9uIiwicm9vbVNsaWNlIiwiY3JlYXRlU2xpY2UiLCJpbml0aWFsU3RhdGUiLCJsaXN0Um9vbSIsImlkUm9vbSIsInJlZHVjZXJzIiwiZ2V0TGlzdFJvb20iLCJzZXRMaXN0Um9vbSIsInN0YXRlIiwiYWN0aW9uIiwicGF5bG9hZCIsImdldFJvb21JZCIsInNldFJvb21JZCIsInBvc3RSb29tIiwiZGVsZXRlUm9vbSIsIl9yb29tU2xpY2UkYWN0aW9ucyIsImFjdGlvbnMiLCJMb2FkaW5nU2xpY2UiLCJ0b2dnbGVMb2FkaW5nIiwiZ2V0TG9hZGluZyIsInNldExvYWRpbmciLCJfTG9hZGluZ1NsaWNlJGFjdGlvbnMiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiZXhwb3J0cyIsIk9wIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCJkZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsImRlc2MiLCJ2YWx1ZSIsIiRTeW1ib2wiLCJTeW1ib2wiLCJpdGVyYXRvclN5bWJvbCIsIml0ZXJhdG9yIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsInRvU3RyaW5nVGFnIiwiZGVmaW5lIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiZXJyIiwid3JhcCIsImlubmVyRm4iLCJvdXRlckZuIiwic2VsZiIsInRyeUxvY3NMaXN0IiwicHJvdG9HZW5lcmF0b3IiLCJHZW5lcmF0b3IiLCJnZW5lcmF0b3IiLCJjcmVhdGUiLCJjb250ZXh0IiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsImZuIiwiYXJnIiwiY2FsbCIsIkNvbnRpbnVlU2VudGluZWwiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJnZXRQcm90byIsImdldFByb3RvdHlwZU9mIiwiTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUiLCJ2YWx1ZXMiLCJHcCIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJtZXRob2QiLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsIlByb21pc2VJbXBsIiwiaW52b2tlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlY29yZCIsInJlc3VsdCIsIl90eXBlb2YiLCJfX2F3YWl0IiwidGhlbiIsInVud3JhcHBlZCIsImVycm9yIiwicHJldmlvdXNQcm9taXNlIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJFcnJvciIsInVuZGVmaW5lZCIsImRvbmUiLCJkZWxlZ2F0ZSIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwibWV0aG9kTmFtZSIsIlR5cGVFcnJvciIsImluZm8iLCJyZXN1bHROYW1lIiwibmV4dCIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiZW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJwdXNoIiwicmVzZXRUcnlFbnRyeSIsImNvbXBsZXRpb24iLCJyZXNldCIsIml0ZXJhYmxlIiwiaXRlcmF0b3JNZXRob2QiLCJpc05hTiIsImxlbmd0aCIsImkiLCJkb25lUmVzdWx0IiwiZGlzcGxheU5hbWUiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsImNvbnN0cnVjdG9yIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJpdGVyIiwia2V5cyIsInZhbCIsIm9iamVjdCIsInJldmVyc2UiLCJwb3AiLCJza2lwVGVtcFJlc2V0IiwicHJldiIsImNoYXJBdCIsInNsaWNlIiwic3RvcCIsInJvb3RSZWNvcmQiLCJydmFsIiwiZXhjZXB0aW9uIiwiaGFuZGxlIiwibG9jIiwiY2F1Z2h0IiwiaGFzQ2F0Y2giLCJoYXNGaW5hbGx5IiwiZmluYWxseUVudHJ5IiwiY29tcGxldGUiLCJmaW5pc2giLCJ0aHJvd24iLCJkZWxlZ2F0ZVlpZWxkIiwiX21hcmtlZCIsIm9uSGFuZGVsTG9hZGluZyIsIl9tYXJrZWQyIiwiYWxsSGFuZGVsTG9hZGluZyIsIl9jb250ZXh0IiwicHV0IiwiX2NvbnRleHQyIiwidGFrZUxhdGVzdCIsIkxvYWRpbmdTYWdhIiwiZm9yayIsImdldExpc3RSb29tQXBpIiwiQVBJIiwicmVzIiwiY29uc29sZSIsImxvZyIsImdldFJvb21JZEFwaSIsInBvc3RSb29tQVBJIiwiZGVsZXRlUm9vbUFQSSIsInB1dFJvb21BUEkiLCJvbkhhbmRlbEdldExpc3RSb29tIiwib25IYW5kZWxHZXRSb29tSWQiLCJfbWFya2VkMyIsIm9uSGFuZGVsUG9zdFJvb20iLCJfbWFya2VkNCIsIm9uSGFuZGVsRGVsZXRlUm9vbSIsIl9tYXJrZWQ1Iiwib25IYW5kZWxQdXRSb29tIiwiX21hcmtlZDYiLCJhbGxIYW5kZWxSb29tU2FnYSIsImNvZGUiLCJyZXN1ZnQiLCJfY29udGV4dDMiLCJfY29udGV4dDQiLCJfY29udGV4dDUiLCJfY29udGV4dDYiLCJ0YWtlRXZlcnkiLCJyb29tU2FnYSIsInJvb3RTYWdhIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwiX2FycmF5TGlrZVRvQXJyYXkiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJmcm9tIiwiX2l0ZXJhYmxlVG9BcnJheSIsIm8iLCJtaW5MZW4iLCJuIiwidG9TdHJpbmciLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlU3ByZWFkIiwibGVuIiwiYXJyMiIsImFsbCIsInNhZ2FNaWRkbGV3YXJlIiwiY3JlYXRlU2FnYU1pZGRsZXdhcmUiLCJzdG9yZSIsImNvbmZpZ3VyZVN0b3JlIiwicmVkdWNlciIsImxvYWRpbmciLCJsb2FkaW5nUmVkdWNlciIsInJvb20iLCJyb29tUmVkdWNlciIsIm1pZGRsZXdhcmUiLCJydW4iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIm1vZHVsZSIsImxvY2FscyIsIm9wdGlvbnMiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInNldEF0dHJpYnV0ZXMiLCJpbnNlcnQiLCJkb21BUEkiLCJpbnNlcnRTdHlsZUVsZW1lbnQiXSwic291cmNlUm9vdCI6IiJ9